# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Slip(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, number: int=None, current_boat: str=None, arrival_date: str=None):  # noqa: E501
        """Slip - a model defined in Swagger

        :param id: The id of this Slip.  # noqa: E501
        :type id: str
        :param number: The number of this Slip.  # noqa: E501
        :type number: int
        :param current_boat: The current_boat of this Slip.  # noqa: E501
        :type current_boat: str
        :param arrival_date: The arrival_date of this Slip.  # noqa: E501
        :type arrival_date: str
        """
        self.swagger_types = {
            'id': str,
            'number': int,
            'current_boat': str,
            'arrival_date': str
        }

        self.attribute_map = {
            'id': 'id',
            'number': 'number',
            'current_boat': 'current_boat',
            'arrival_date': 'arrival_date'
        }

        self._id = id
        self._number = number
        self._current_boat = current_boat
        self._arrival_date = arrival_date

    @classmethod
    def from_dict(cls, dikt) -> 'Slip':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Slip of this Slip.  # noqa: E501
        :rtype: Slip
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> str:
        """Gets the id of this Slip.


        :return: The id of this Slip.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this Slip.


        :param id: The id of this Slip.
        :type id: str
        """

        self._id = id

    @property
    def number(self) -> int:
        """Gets the number of this Slip.


        :return: The number of this Slip.
        :rtype: int
        """
        return self._number

    @number.setter
    def number(self, number: int):
        """Sets the number of this Slip.


        :param number: The number of this Slip.
        :type number: int
        """
        if number is None:
            raise ValueError("Invalid value for `number`, must not be `None`")  # noqa: E501

        self._number = number

    @property
    def current_boat(self) -> str:
        """Gets the current_boat of this Slip.


        :return: The current_boat of this Slip.
        :rtype: str
        """
        return self._current_boat

    @current_boat.setter
    def current_boat(self, current_boat: str):
        """Sets the current_boat of this Slip.


        :param current_boat: The current_boat of this Slip.
        :type current_boat: str
        """
        if current_boat is None:
            raise ValueError("Invalid value for `current_boat`, must not be `None`")  # noqa: E501

        self._current_boat = current_boat

    @property
    def arrival_date(self) -> str:
        """Gets the arrival_date of this Slip.


        :return: The arrival_date of this Slip.
        :rtype: str
        """
        return self._arrival_date

    @arrival_date.setter
    def arrival_date(self, arrival_date: str):
        """Sets the arrival_date of this Slip.


        :param arrival_date: The arrival_date of this Slip.
        :type arrival_date: str
        """
        if arrival_date is None:
            raise ValueError("Invalid value for `arrival_date`, must not be `None`")  # noqa: E501

        self._arrival_date = arrival_date
